{"version":3,"sources":["nameToCountryCode.ts","CountryButton.tsx","Firebase.ts","participatingCountries.ts","Voting.tsx","DndVoting.tsx","ScoreBoard.tsx","App.tsx","index.tsx"],"names":["s","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antarctica","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire","Botswana","Brazil","Bulgaria","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Congo","Croatia","Cuba","Curacao","Cyprus","Denmark","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iraq","Ireland","Israel","Italy","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Palestine","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Reunion","Samoa","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Swaziland","Sweden","Switzerland","Taiwan","Tajikistan","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Venezuela","Yemen","Zambia","Zimbabwe","name","onClick","disabled","flag","nameToCountryCode","toLowerCase","type","className","src","alt","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","Voting","useState","votes","setVotes","points","setPoints","userName","setUserName","nextPoint","restPoints","postSucceeded","setPostSucceeded","countriesWithVotes","Object","values","awardedAllPoints","scoresIsEmpty","keys","length","entries","sort","a","b","parseInt","reverse","map","point","country","toString","lastScore","Math","min","otherVotes","countries","c","CountryButton","includes","Fragment","value","onChange","e","target","collection","add","then","docRef","console","log","id","catch","error","pointsInOrder","DndVoting","props","defaultState","items","countryName","index","localStorageContent","localStorage","getItem","savedState","JSON","parse","areSameLength","containSameCountries","setA","setB","_intersection","Set","elem","has","intersection","size","savedCountriesAreEqualToParticipatingCountries","state","onDragEnd","bind","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","this","source","setState","setItem","stringify","style","margin","textAlign","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","background","padding","width","item","draggableId","marginBottom","grid","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","placeholder","reduce","accumulator","Component","ScoreBoard","allVotes","setAllVotes","voteSteps","setVoteSteps","useEffect","get","querySnapshot","scoresAndUsers","forEach","d","push","data","votingState","soFar","ouv","tempAccum","myVoteStep","voteTally","usersVotes","votingUserName","countryList","points1","score","isLatestVote","max","backgroundColor","App","basename","process","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7f5799d.chunk.js","sourcesContent":["interface NameToCountryCode {\n  [countryName: string]: string;\n}\n\nconst s: NameToCountryCode = {\n  Afghanistan: \"AF\",\n  Albania: \"AL\",\n  Algeria: \"DZ\",\n  \"American Samoa\": \"AS\",\n  Andorra: \"AD\",\n  Angola: \"AO\",\n  Anguilla: \"AI\",\n  Antarctica: \"AQ\",\n  \"Antigua and Barbuda\": \"AG\",\n  Argentina: \"AR\",\n  Armenia: \"AM\",\n  Aruba: \"AW\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahamas: \"BS\",\n  Bahrain: \"BH\",\n  Bangladesh: \"BD\",\n  Barbados: \"BB\",\n  Belarus: \"BY\",\n  Belgium: \"BE\",\n  Belize: \"BZ\",\n  Benin: \"BJ\",\n  Bermuda: \"BM\",\n  Bhutan: \"BT\",\n  Bolivia: \"BO\",\n  Bonaire: \"BQ\",\n  \"Bosnia and Herzegovina\": \"BA\",\n  Botswana: \"BW\",\n  \"Bouvet Island\": \"BV\",\n  Brazil: \"BR\",\n  \"British Indian Ocean Territory\": \"IO\",\n  \"Brunei Darussalam\": \"BN\",\n  Bulgaria: \"BG\",\n  \"Burkina Faso\": \"BF\",\n  Burundi: \"BI\",\n  Cambodia: \"KH\",\n  Cameroon: \"CM\",\n  Canada: \"CA\",\n  \"Cape Verde\": \"CV\",\n  \"Cayman Islands\": \"KY\",\n  \"Central African Republic\": \"CF\",\n  Chad: \"TD\",\n  Chile: \"CL\",\n  China: \"CN\",\n  \"Christmas Island\": \"CX\",\n  \"Cocos (Keeling) Islands\": \"CC\",\n  Colombia: \"CO\",\n  Comoros: \"KM\",\n  Congo: \"CG\",\n  \"Democratic Republic of the Congo\": \"CD\",\n  \"Cook Islands\": \"CK\",\n  \"Costa Rica\": \"CR\",\n  Croatia: \"HR\",\n  Cuba: \"CU\",\n  Curacao: \"CW\",\n  Cyprus: \"CY\",\n  \"Czech Republic\": \"CZ\",\n  \"Cote d'Ivoire\": \"CI\",\n  Denmark: \"DK\",\n  Djibouti: \"DJ\",\n  Dominica: \"DM\",\n  \"Dominican Republic\": \"DO\",\n  Ecuador: \"EC\",\n  Egypt: \"EG\",\n  \"El Salvador\": \"SV\",\n  \"Equatorial Guinea\": \"GQ\",\n  Eritrea: \"ER\",\n  Estonia: \"EE\",\n  Ethiopia: \"ET\",\n  \"Falkland Islands (Malvinas)\": \"FK\",\n  \"Faroe Islands\": \"FO\",\n  Fiji: \"FJ\",\n  Finland: \"FI\",\n  France: \"FR\",\n  \"French Guiana\": \"GF\",\n  \"French Polynesia\": \"PF\",\n  \"French Southern Territories\": \"TF\",\n  Gabon: \"GA\",\n  Gambia: \"GM\",\n  Georgia: \"GE\",\n  Germany: \"DE\",\n  Ghana: \"GH\",\n  Gibraltar: \"GI\",\n  Greece: \"GR\",\n  Greenland: \"GL\",\n  Grenada: \"GD\",\n  Guadeloupe: \"GP\",\n  Guam: \"GU\",\n  Guatemala: \"GT\",\n  Guernsey: \"GG\",\n  Guinea: \"GN\",\n  \"Guinea-Bissau\": \"GW\",\n  Guyana: \"GY\",\n  Haiti: \"HT\",\n  \"Heard Island and McDonald Islands\": \"HM\",\n  \"Holy See (Vatican City State)\": \"VA\",\n  Honduras: \"HN\",\n  \"Hong Kong\": \"HK\",\n  Hungary: \"HU\",\n  Iceland: \"IS\",\n  India: \"IN\",\n  Indonesia: \"ID\",\n  \"Iran, Islamic Republic of\": \"IR\",\n  Iraq: \"IQ\",\n  Ireland: \"IE\",\n  \"Isle of Man\": \"IM\",\n  Israel: \"IL\",\n  Italy: \"IT\",\n  \"Jamaica\tJM\tJAM\": \"JM\",\n  Japan: \"JP\",\n  Jersey: \"JE\",\n  Jordan: \"JO\",\n  Kazakhstan: \"KZ\",\n  Kenya: \"KE\",\n  Kiribati: \"KI\",\n  \"Korea, Democratic People's Republic of  \": \"KP\",\n  \"Korea, Republic of\": \"KR\",\n  Kuwait: \"KW\",\n  Kyrgyzstan: \"KG\",\n  Laos: \"LA\",\n  Latvia: \"LV\",\n  Lebanon: \"LB\",\n  Lesotho: \"LS\",\n  Liberia: \"LR\",\n  Libya: \"LY\",\n  Liechtenstein: \"LI\",\n  Lithuania: \"LT\",\n  Luxembourg: \"LU\",\n  Macao: \"MO\",\n  \"North Macedonia\": \"MK\",\n  Madagascar: \"MG\",\n  Malawi: \"MW\",\n  Malaysia: \"MY\",\n  Maldives: \"MV\",\n  Mali: \"ML\",\n  Malta: \"MT\",\n  \"Marshall Islands\": \"MH\",\n  Martinique: \"MQ\",\n  Mauritania: \"MR\",\n  Mauritius: \"MU\",\n  Mayotte: \"YT\",\n  Mexico: \"MX\",\n  \"Micronesia, Federated States of\": \"FM\",\n  Moldova: \"MD\",\n  Monaco: \"MC\",\n  Mongolia: \"MN\",\n  Montenegro: \"ME\",\n  Montserrat: \"MS\",\n  Morocco: \"MA\",\n  Mozambique: \"MZ\",\n  Myanmar: \"MM\",\n  Namibia: \"NA\",\n  Nauru: \"NR\",\n  Nepal: \"NP\",\n  Netherlands: \"NL\",\n  \"New Caledonia\": \"NC\",\n  \"New Zealand\": \"NZ\",\n  Nicaragua: \"NI\",\n  Niger: \"NE\",\n  Nigeria: \"NG\",\n  Niue: \"NU\",\n  \"Norfolk Island\": \"NF\",\n  \"Northern Mariana Islands\": \"MP\",\n  Norway: \"NO\",\n  Oman: \"OM\",\n  Pakistan: \"PK\",\n  Palau: \"PW\",\n  Palestine: \"PS\",\n  Panama: \"PA\",\n  \"Papua New Guinea\": \"PG\",\n  Paraguay: \"PY\",\n  Peru: \"PE\",\n  Philippines: \"PH\",\n  Pitcairn: \"PN\",\n  Poland: \"PL\",\n  Portugal: \"PT\",\n  \"Puerto Rico\": \"PR\",\n  Qatar: \"QA\",\n  Romania: \"RO\",\n  Russia: \"RU\",\n  Rwanda: \"RW\",\n  Reunion: \"RE\",\n  \"Saint Barthelemy\": \"BL\",\n  \"Saint Helena\": \"SH\",\n  \"Saint Kitts and Nevis\": \"KN\",\n  \"Saint Lucia\": \"LC\",\n  \"Saint Martin (French part)\": \"MF\",\n  \"Saint Pierre and Miquelon\": \"PM\",\n  \"Saint Vincent and the Grenadines\": \"VC\",\n  Samoa: \"WS\",\n  \"San Marino\": \"SM\",\n  \"Sao Tome and Principe\": \"ST\",\n  \"Saudi Arabia\": \"SA\",\n  Senegal: \"SN\",\n  Serbia: \"RS\",\n  Seychelles: \"SC\",\n  \"Sierra Leone\": \"SL\",\n  Singapore: \"SG\",\n  \"Sint Maarten (Dutch part)\": \"SX\",\n  Slovakia: \"SK\",\n  Slovenia: \"SI\",\n  \"Solomon Islands\": \"SB\",\n  Somalia: \"SO\",\n  \"South Africa\": \"ZA\",\n  \"South Georgia and the South Sandwich Islands\": \"GS\",\n  \"South Sudan\": \"SS\",\n  Spain: \"ES\",\n  \"Sri Lanka\": \"LK\",\n  Sudan: \"SD\",\n  Suriname: \"SR\",\n  \"Svalbard and Jan Mayen\": \"SJ\",\n  Swaziland: \"SZ\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  \"Syrian Arab Republic\": \"SY\",\n  Taiwan: \"TW\",\n  Tajikistan: \"TJ\",\n  \"United Republic of Tanzania\": \"TZ\",\n  Thailand: \"TH\",\n  \"Timor-Leste\": \"TL\",\n  Togo: \"TG\",\n  Tokelau: \"TK\",\n  Tonga: \"TO\",\n  \"Trinidad and Tobago\": \"TT\",\n  Tunisia: \"TN\",\n  Turkey: \"TR\",\n  Turkmenistan: \"TM\",\n  \"Turks and Caicos Islands\": \"TC\",\n  Tuvalu: \"TV\",\n  Uganda: \"UG\",\n  Ukraine: \"UA\",\n  \"United Arab Emirates\": \"AE\",\n  \"United Kingdom\": \"GB\",\n  \"United States\": \"US\",\n  \"United States Minor Outlying Islands\": \"UM\",\n  Uruguay: \"UY\",\n  Uzbekistan: \"UZ\",\n  Vanuatu: \"VU\",\n  Venezuela: \"VE\",\n  \"Viet Nam\": \"VN\",\n  \"British Virgin Islands\": \"VG\",\n  \"US Virgin Islands\": \"VI\",\n  \"Wallis and Futuna\": \"WF\",\n  \"Western Sahara\": \"EH\",\n  Yemen: \"YE\",\n  Zambia: \"ZM\",\n  Zimbabwe: \"ZW\"\n};\n\nexport default s;\n","import React from \"react\";\nimport nameToCountryCode from \"./nameToCountryCode\";\n\ntype Props = {\n  name: string;\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n  disabled: boolean;\n};\n\n// eslint-disable-next-line\nexport default ({ name, onClick, disabled }: Props) => {\n  const flag = `flags/${nameToCountryCode[name].toLowerCase()}.png`;\n  return (\n    <button\n      type=\"button\"\n      className={`nes-btn is-primary ${disabled && \"is-disabled\"}`}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <img src={flag} className=\"flag\" alt={`Flag of ${name}`} />\n      <span className=\"nes-text\">{name}</span>\n    </button>\n  );\n};\n","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAyiPwsV5KhuJBve4i9Ci4qcXyB9fc5XQs\",\n  authDomain: \"esc-voter.firebaseapp.com\",\n  databaseURL: \"https://esc-voter.firebaseio.com\",\n  projectId: \"esc-voter\",\n  storageBucket: \"esc-voter.appspot.com\",\n  messagingSenderId: \"124189722667\",\n  appId: \"1:124189722667:web:86ccdcbd1414565558826e\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\n","// eslint-disable-next-line\nexport default [\n  \"Cyprus\",\n  \"Albania\",\n  \"Israel\",\n  \"Belgium\",\n  \"Russia\",\n  \"Malta\",\n  \"Portugal\",\n  \"Serbia\",\n  \"United Kingdom\",\n  \"Greece\",\n  \"Switzerland\",\n  \"Iceland\",\n  \"Spain\",\n  \"Moldova\",\n  \"Germany\",\n  \"Finland\",\n  \"Bulgaria\",\n  \"Lithuania\",\n  \"Ukraine\",\n  \"France\",\n  \"Azerbaijan\",\n  \"Norway\",\n  \"Netherlands\",\n  \"Italy\",\n  \"Sweden\",\n  \"San Marino\"\n];\n","import React, { useState } from \"react\";\nimport CountryButton from \"./CountryButton\";\nimport { db } from \"./Firebase\";\nimport countries from \"./participatingCountries\";\n\nconst Voting = () => {\n  const [votes, setVotes]: [{ [point: number]: string }, any] = useState([]);\n  const [points, setPoints] = useState([12, 10, 8, 7, 6, 5, 4, 3, 2, 1]);\n  const [userName, setUserName] = useState(\"\");\n\n  const [nextPoint, ...restPoints] = points;\n  const [postSucceeded, setPostSucceeded] = useState(false);\n\n  const countriesWithVotes: string[] = Object.values(votes);\n  const awardedAllPoints = !nextPoint;\n\n  const scoresIsEmpty = Object.keys(votes).length === 0;\n  return (\n    <div>\n      <div>\n        <table>\n          <tbody>\n            {Object.entries(votes)\n              .sort((a, b) => parseInt(a[0]) - parseInt(b[0]))\n              .reverse()\n              .map(([point, country]) => (\n                <tr key={point.toString() + country}>\n                  <td>{point}</td>\n                  <td>{country}</td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n      {!postSucceeded && (\n        <div>\n          <button\n            disabled={scoresIsEmpty}\n            className={`nes-btn is-error ${scoresIsEmpty && \"is-disabled\"}`}\n            onClick={() => {\n              if (votes) {\n                const lastScore = Math.min(\n                  ...Object.keys(votes).map(a => parseInt(a))\n                );\n                const { [lastScore]: foo, ...otherVotes } = votes;\n                const point = lastScore || 0;\n\n                setPoints([point, ...points]);\n                setVotes(otherVotes);\n              }\n            }}\n          >\n            Angre\n          </button>\n        </div>\n      )}\n      {nextPoint && (\n        <div>\n          <em>\n            {nextPoint} points\n            <br /> goes to\n          </em>\n        </div>\n      )}\n      {nextPoint && (\n        <div>\n          {countries.map(c => (\n            <CountryButton\n              key={c}\n              disabled={countriesWithVotes.includes(c)}\n              onClick={() => {\n                setPoints(restPoints);\n                setVotes({ ...votes, [nextPoint]: c });\n              }}\n              name={c}\n            />\n          ))}\n        </div>\n      )}\n      {postSucceeded ? (\n        <div>Sendte inn!</div>\n      ) : (\n        <React.Fragment>\n          {awardedAllPoints && (\n            <React.Fragment>\n              <div className=\"nes-field\">\n                <label>Navnet ditt</label>\n                <input\n                  value={userName}\n                  onChange={e => setUserName(e.target.value)}\n                  className=\"nes-input\"\n                  type=\"text\"\n                />\n              </div>\n              <button\n                className={`nes-btn is-primary ${!userName && \"is-disabled\"}`}\n                onClick={async () => {\n                  db.collection(\"user-votes\")\n                    .add({\n                      userName,\n                      votes\n                    })\n                    .then(function(docRef) {\n                      console.log(\"Document written with ID: \", docRef.id);\n                      setPostSucceeded(true);\n                    })\n                    .catch(function(error) {\n                      console.error(\"Error adding document: \", error);\n                    });\n                }}\n              >\n                Send inn\n              </button>\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Voting;\n","import React, { Component, CSSProperties } from \"react\";\nimport {\n  DragDropContext,\n  Draggable,\n  DraggableProvided,\n  DraggingStyle,\n  Droppable,\n  DropResult,\n  NotDraggingStyle\n} from \"react-beautiful-dnd\";\nimport countries from \"./participatingCountries\";\nimport nameToCountryCode from \"./nameToCountryCode\";\nimport { db } from \"./Firebase\";\n\n// a little function to help us with reordering the result\nconst reorder = (list: any[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst pointsInOrder = [12, 10, 8, 7, 6, 5, 4, 3, 2, 1];\n\nconst grid = 8;\n\nconst getItemStyle = (\n  isDragging: boolean,\n  draggableStyle: DraggingStyle | NotDraggingStyle | null | undefined\n): CSSProperties => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid,\n  // margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"lightblue\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250,\n  margin: \"0 auto\"\n});\n\ntype Item = { id: string; countryName: string };\ntype State = { items: Item[]; userName: string; postSucceeded: boolean };\n\nconst getCountries = (): Item[] =>\n  countries.map((countryName, index) => ({ id: `item-${index}`, countryName }));\n\nclass DndVoting extends Component<any, State> {\n  constructor(props: Object) {\n    super(props);\n    const countriesAsTheyWouldAppearWhenFresh = getCountries();\n    const defaultState = {\n      items: countriesAsTheyWouldAppearWhenFresh,\n      userName: \"\",\n      postSucceeded: false\n    };\n    const localStorageContent = localStorage.getItem(\"lastState\");\n    const savedState = localStorageContent\n      ? JSON.parse(localStorageContent)\n      : defaultState;\n\n    const areSameLength = defaultState.items.length === savedState.items.length;\n    const containSameCountries =\n      intersection(\n        new Set(defaultState.items.map(({ countryName }) => countryName)),\n        new Set(\n          savedState.items.map(\n            ({ countryName }: { countryName: string }) => countryName\n          )\n        )\n      ).size === defaultState.items.length;\n    const savedCountriesAreEqualToParticipatingCountries =\n      areSameLength && containSameCountries;\n\n    console.log(\"areSameLength\", areSameLength);\n    console.log(\"containSameCountries\", containSameCountries);\n\n    if (savedCountriesAreEqualToParticipatingCountries) {\n      this.state = savedState;\n    } else {\n      this.state = defaultState;\n    }\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result: DropResult) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      items\n    });\n\n    let key = \"lastState\";\n    localStorage.setItem(key, JSON.stringify({ ...this.state, items }));\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const { userName, items } = this.state;\n    return (\n      <div>\n        <h1 style={{ margin: \"1rem\" }}>ESC hos Lene og Gunnar 2022</h1>\n        <div style={{ textAlign: \"left\", margin: \"1rem\" }}>\n          <p>\n            Dra og slipp landene i rekkefølge. Du trenger ikke sortere de som\n            ikke får poeng.\n          </p>\n          <p>Sveip til bunnen for å skrive inn kallenavn og sende inn poeng.</p>\n        </div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {items.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided: DraggableProvided, snapshot) => {\n                      return (\n                        <div\n                          style={{\n                            marginBottom: `${grid * 2}px`\n                          }}\n                        >\n                          <div\n                            className=\"nes-container is-rounded\"\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <div>\n                              <img\n                                src={`flags/${nameToCountryCode[\n                                  item.countryName\n                                ].toLowerCase()}.png`}\n                                className=\"flag\"\n                                alt={`Flag of ${item.countryName}`}\n                              />\n                              {item.countryName}\n                            </div>\n                            {pointsInOrder[index] && (\n                              <div\n                                className=\"nes-container is-rounded\"\n                                style={{\n                                  padding: \"0.1rem\",\n                                  background: \"#fff\"\n                                }}\n                              >\n                                {pointsInOrder[index]}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      );\n                    }}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <div style={{ margin: \"1rem\" }}>\n          {this.state.postSucceeded ? (\n            <div>Sendte inn!</div>\n          ) : (\n            <React.Fragment>\n              <div className=\"nes-field\" style={{ margin: \"1rem\" }}>\n                <label>Navnet ditt</label>\n                <input\n                  value={this.state.userName}\n                  onChange={e => this.setState({ userName: e.target.value })}\n                  className=\"nes-input\"\n                  type=\"text\"\n                />\n              </div>\n              <button\n                className={`nes-btn is-primary ${!userName && \"is-disabled\"}`}\n                style={{ marginBottom: \"8rem\" }}\n                onClick={async () => {\n                  const votes: {\n                    [point: number]: string;\n                  } = pointsInOrder.reduce(\n                    (accumulator, point, index) => ({\n                      ...accumulator,\n                      [point]: items[index].countryName\n                    }),\n                    {}\n                  );\n                  db.collection(\"user-votes\")\n                    .add({\n                      userName,\n                      votes\n                    })\n                    .then(docRef => {\n                      console.log(\"Document written with ID: \", docRef.id);\n                      this.setState({ postSucceeded: true });\n                    })\n                    .catch(error => {\n                      console.error(\"Error adding document: \", error);\n                    });\n                }}\n              >\n                Send inn poeng\n              </button>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction intersection<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  let _intersection = new Set<T>();\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      _intersection.add(elem);\n    }\n  }\n  return _intersection;\n}\n\nexport default DndVoting;\n","import React, { useState, useEffect } from \"react\";\nimport { db } from \"./Firebase\";\nimport countryList from \"./participatingCountries\";\nimport nameToCountryCode from \"./nameToCountryCode\";\n\ntype OneUsersVotes = { userName: string; votes: { [point: number]: string } };\ntype AllVotes = Array<OneUsersVotes>;\ntype VotingState = {\n  voteTally: FinalScore;\n  usersVotes: { [country: string]: number };\n  votingUserName: string;\n  myVoteStep: number;\n};\ntype FinalScore = { [country: string]: number };\n\nconst ScoreBoard = () => {\n  const [allVotes, setAllVotes] = useState<AllVotes>([]);\n  const [voteSteps, setVoteSteps] = useState<number>(0);\n\n  useEffect(() => {\n    db.collection(\"user-votes\")\n      .get()\n      .then(querySnapshot => {\n        const scoresAndUsers: AllVotes = [];\n        querySnapshot.forEach(d =>\n          scoresAndUsers.push({\n            userName: d.data().userName,\n            votes: d.data().votes\n          })\n        );\n        setAllVotes(scoresAndUsers);\n      });\n  }, []);\n\n  const votingState: VotingState = allVotes.reduce(\n    (soFar: VotingState, ouv: OneUsersVotes) => {\n      try {\n        return Object.entries<string>(ouv.votes)\n          .map<[string, number]>(([points, country]) => [\n            country,\n            parseInt(points)\n          ])\n          .sort(([, points1], [, points2]) => points1 - points2)\n          .reduce<VotingState>(\n            (tempAccum: VotingState, [country, points]) =>\n              tempAccum.myVoteStep >= voteSteps\n                ? tempAccum\n                : {\n                    ...tempAccum,\n                    voteTally: {\n                      ...tempAccum.voteTally,\n                      [country]: (tempAccum.voteTally[country] || 0) + points\n                    },\n                    usersVotes:\n                      ouv.userName === tempAccum.votingUserName\n                        ? { ...tempAccum.usersVotes, [country]: points }\n                        : { [country]: points },\n                    myVoteStep: tempAccum.myVoteStep + 1,\n                    votingUserName: ouv.userName\n                  },\n\n            soFar\n          );\n      } catch (e) {\n        return soFar;\n      }\n    },\n    {\n      voteTally: countryList.reduce((soFar, a) => ({ ...soFar, [a]: 0 }), {}),\n      usersVotes: {},\n      votingUserName: \"\",\n      myVoteStep: 0\n    }\n  );\n  console.log(votingState);\n\n  console.log(allVotes);\n  return (\n    <div>\n      <h1>Resultater</h1>\n      <div>\n        <button\n          className={`nes-btn is-secondary`}\n          onClick={() => setVoteSteps(voteSteps - 1)}\n        >\n          Tilbake\n        </button>\n        <button\n          className={`nes-btn is-primary`}\n          onClick={() => setVoteSteps(voteSteps + 1)}\n        >\n          Neste\n        </button>\n      </div>\n      <div>Stemmene fra {votingState.votingUserName}</div>\n      <div>\n        <div style={{ width: \"400px\", margin: \"0 auto\" }}>\n          <table\n            className=\"nes-table is-bordered is-centered\"\n            style={{ background: \"lightblue\" }}\n          >\n            <tbody>\n              {Object.entries<number>(votingState.voteTally)\n                .sort(([, points1], [, points2]) => points2 - points1)\n                .map(([country, score]: [string, number]) => {\n                  const isLatestVote =\n                    votingState.usersVotes[country] ===\n                    Math.max(...Object.values(votingState.usersVotes));\n                  const flag = `flags/${nameToCountryCode[\n                    country\n                  ].toLowerCase()}.png`;\n                  return (\n                    <tr\n                      style={\n                        isLatestVote\n                          ? {\n                              backgroundColor: \"rgb(32, 156, 238)\"\n                            }\n                          : {}\n                      }\n                      key={`${country} ${score}`}\n                    >\n                      <td>\n                        <img\n                          src={flag}\n                          className=\"flag\"\n                          alt={`Flag of ${country}`}\n                        />\n                        {country}\n                      </td>\n                      <td style={{width: \"4rem\"}}>{votingState.usersVotes[country] || \"\"}</td>\n                      <td style={{width: \"4rem\"}}>{score}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import React from \"react\";\nimport \"./App.css\";\nimport Voting from \"./Voting\";\nimport DndVoting from \"./DndVoting\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" exact component={DndVoting} />\n        <Route path=\"/aoeu\" component={ScoreBoard} />\n        <Route path=\"/old\" component={Voting} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}
{"version":3,"sources":["participatingCountries.ts","nameToCountryCode.ts","Firebase.ts","DndVoting.tsx","ScoreBoard.tsx","App.tsx","index.tsx"],"names":["participatingCountries","s","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antarctica","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire","Botswana","Brazil","Bulgaria","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Congo","Croatia","Cuba","Curacao","Cyprus","Czechia","Denmark","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iraq","Ireland","Israel","Italy","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Palestine","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Reunion","Samoa","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Swaziland","Sweden","Switzerland","Taiwan","Tajikistan","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Venezuela","Yemen","Zambia","Zimbabwe","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","pointsInOrder","DndVoting","props","defaultState","items","map","countryName","index","id","userName","postSucceeded","localStorageContent","localStorage","getItem","savedState","JSON","parse","areSameLength","length","containSameCountries","setA","setB","_intersection","Set","elem","has","add","intersection","size","savedCountriesAreEqualToParticipatingCountries","console","log","state","onDragEnd","bind","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","this","source","setState","setItem","stringify","style","margin","textAlign","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","background","padding","width","item","draggableId","marginBottom","grid","className","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","src","nameToCountryCode","toLowerCase","alt","placeholder","Fragment","value","onChange","e","target","type","onClick","a","votes","reduce","accumulator","point","collection","then","docRef","catch","error","Component","ScoreBoard","useState","allVotes","setAllVotes","voteSteps","setVoteSteps","useEffect","get","querySnapshot","scoresAndUsers","forEach","d","push","data","votingState","soFar","ouv","Object","entries","points","parseInt","sort","tempAccum","country","myVoteStep","voteTally","usersVotes","votingUserName","points1","score","isLatestVote","Math","max","values","flag","backgroundColor","App","basename","process","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac49692a.chunk.js","sourcesContent":["const participatingCountries = [\n  \"Austria\",\n  \"Portugal\",\n  \"Switzerland\",\n  \"Poland\",\n  \"Serbia\",\n  \"France\",\n  \"Cyprus\",\n  \"Spain\",\n  \"Sweden\",\n  \"Albania\",\n  \"Italy\",\n  \"Estonia\",\n  \"Finland\",\n  \"Czechia\",\n  \"Australia\",\n  \"Belgium\",\n  \"Armenia\",\n  \"Moldova\",\n  \"Ukraine\",\n  \"Norway\",\n  \"Germany\",\n  \"Lithuania\",\n  \"Israel\",\n  \"Slovenia\",\n  \"Croatia\",\n  \"United Kingdom\",\n];\n\nexport default participatingCountries;","interface NameToCountryCode {\n  [countryName: string]: string;\n}\n\nconst s: NameToCountryCode = {\n  Afghanistan: \"AF\",\n  Albania: \"AL\",\n  Algeria: \"DZ\",\n  \"American Samoa\": \"AS\",\n  Andorra: \"AD\",\n  Angola: \"AO\",\n  Anguilla: \"AI\",\n  Antarctica: \"AQ\",\n  \"Antigua and Barbuda\": \"AG\",\n  Argentina: \"AR\",\n  Armenia: \"AM\",\n  Aruba: \"AW\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahamas: \"BS\",\n  Bahrain: \"BH\",\n  Bangladesh: \"BD\",\n  Barbados: \"BB\",\n  Belarus: \"BY\",\n  Belgium: \"BE\",\n  Belize: \"BZ\",\n  Benin: \"BJ\",\n  Bermuda: \"BM\",\n  Bhutan: \"BT\",\n  Bolivia: \"BO\",\n  Bonaire: \"BQ\",\n  \"Bosnia and Herzegovina\": \"BA\",\n  Botswana: \"BW\",\n  \"Bouvet Island\": \"BV\",\n  Brazil: \"BR\",\n  \"British Indian Ocean Territory\": \"IO\",\n  \"Brunei Darussalam\": \"BN\",\n  Bulgaria: \"BG\",\n  \"Burkina Faso\": \"BF\",\n  Burundi: \"BI\",\n  Cambodia: \"KH\",\n  Cameroon: \"CM\",\n  Canada: \"CA\",\n  \"Cape Verde\": \"CV\",\n  \"Cayman Islands\": \"KY\",\n  \"Central African Republic\": \"CF\",\n  Chad: \"TD\",\n  Chile: \"CL\",\n  China: \"CN\",\n  \"Christmas Island\": \"CX\",\n  \"Cocos (Keeling) Islands\": \"CC\",\n  Colombia: \"CO\",\n  Comoros: \"KM\",\n  Congo: \"CG\",\n  \"Democratic Republic of the Congo\": \"CD\",\n  \"Cook Islands\": \"CK\",\n  \"Costa Rica\": \"CR\",\n  Croatia: \"HR\",\n  Cuba: \"CU\",\n  Curacao: \"CW\",\n  Cyprus: \"CY\",\n  Czechia: \"CZ\",\n  \"Cote d'Ivoire\": \"CI\",\n  Denmark: \"DK\",\n  Djibouti: \"DJ\",\n  Dominica: \"DM\",\n  \"Dominican Republic\": \"DO\",\n  Ecuador: \"EC\",\n  Egypt: \"EG\",\n  \"El Salvador\": \"SV\",\n  \"Equatorial Guinea\": \"GQ\",\n  Eritrea: \"ER\",\n  Estonia: \"EE\",\n  Ethiopia: \"ET\",\n  \"Falkland Islands (Malvinas)\": \"FK\",\n  \"Faroe Islands\": \"FO\",\n  Fiji: \"FJ\",\n  Finland: \"FI\",\n  France: \"FR\",\n  \"French Guiana\": \"GF\",\n  \"French Polynesia\": \"PF\",\n  \"French Southern Territories\": \"TF\",\n  Gabon: \"GA\",\n  Gambia: \"GM\",\n  Georgia: \"GE\",\n  Germany: \"DE\",\n  Ghana: \"GH\",\n  Gibraltar: \"GI\",\n  Greece: \"GR\",\n  Greenland: \"GL\",\n  Grenada: \"GD\",\n  Guadeloupe: \"GP\",\n  Guam: \"GU\",\n  Guatemala: \"GT\",\n  Guernsey: \"GG\",\n  Guinea: \"GN\",\n  \"Guinea-Bissau\": \"GW\",\n  Guyana: \"GY\",\n  Haiti: \"HT\",\n  \"Heard Island and McDonald Islands\": \"HM\",\n  \"Holy See (Vatican City State)\": \"VA\",\n  Honduras: \"HN\",\n  \"Hong Kong\": \"HK\",\n  Hungary: \"HU\",\n  Iceland: \"IS\",\n  India: \"IN\",\n  Indonesia: \"ID\",\n  \"Iran, Islamic Republic of\": \"IR\",\n  Iraq: \"IQ\",\n  Ireland: \"IE\",\n  \"Isle of Man\": \"IM\",\n  Israel: \"IL\",\n  Italy: \"IT\",\n  \"Jamaica\tJM\tJAM\": \"JM\",\n  Japan: \"JP\",\n  Jersey: \"JE\",\n  Jordan: \"JO\",\n  Kazakhstan: \"KZ\",\n  Kenya: \"KE\",\n  Kiribati: \"KI\",\n  \"Korea, Democratic People's Republic of  \": \"KP\",\n  \"Korea, Republic of\": \"KR\",\n  Kuwait: \"KW\",\n  Kyrgyzstan: \"KG\",\n  Laos: \"LA\",\n  Latvia: \"LV\",\n  Lebanon: \"LB\",\n  Lesotho: \"LS\",\n  Liberia: \"LR\",\n  Libya: \"LY\",\n  Liechtenstein: \"LI\",\n  Lithuania: \"LT\",\n  Luxembourg: \"LU\",\n  Macao: \"MO\",\n  \"North Macedonia\": \"MK\",\n  Madagascar: \"MG\",\n  Malawi: \"MW\",\n  Malaysia: \"MY\",\n  Maldives: \"MV\",\n  Mali: \"ML\",\n  Malta: \"MT\",\n  \"Marshall Islands\": \"MH\",\n  Martinique: \"MQ\",\n  Mauritania: \"MR\",\n  Mauritius: \"MU\",\n  Mayotte: \"YT\",\n  Mexico: \"MX\",\n  \"Micronesia, Federated States of\": \"FM\",\n  Moldova: \"MD\",\n  Monaco: \"MC\",\n  Mongolia: \"MN\",\n  Montenegro: \"ME\",\n  Montserrat: \"MS\",\n  Morocco: \"MA\",\n  Mozambique: \"MZ\",\n  Myanmar: \"MM\",\n  Namibia: \"NA\",\n  Nauru: \"NR\",\n  Nepal: \"NP\",\n  Netherlands: \"NL\",\n  \"New Caledonia\": \"NC\",\n  \"New Zealand\": \"NZ\",\n  Nicaragua: \"NI\",\n  Niger: \"NE\",\n  Nigeria: \"NG\",\n  Niue: \"NU\",\n  \"Norfolk Island\": \"NF\",\n  \"Northern Mariana Islands\": \"MP\",\n  Norway: \"NO\",\n  Oman: \"OM\",\n  Pakistan: \"PK\",\n  Palau: \"PW\",\n  Palestine: \"PS\",\n  Panama: \"PA\",\n  \"Papua New Guinea\": \"PG\",\n  Paraguay: \"PY\",\n  Peru: \"PE\",\n  Philippines: \"PH\",\n  Pitcairn: \"PN\",\n  Poland: \"PL\",\n  Portugal: \"PT\",\n  \"Puerto Rico\": \"PR\",\n  Qatar: \"QA\",\n  Romania: \"RO\",\n  Russia: \"RU\",\n  Rwanda: \"RW\",\n  Reunion: \"RE\",\n  \"Saint Barthelemy\": \"BL\",\n  \"Saint Helena\": \"SH\",\n  \"Saint Kitts and Nevis\": \"KN\",\n  \"Saint Lucia\": \"LC\",\n  \"Saint Martin (French part)\": \"MF\",\n  \"Saint Pierre and Miquelon\": \"PM\",\n  \"Saint Vincent and the Grenadines\": \"VC\",\n  Samoa: \"WS\",\n  \"San Marino\": \"SM\",\n  \"Sao Tome and Principe\": \"ST\",\n  \"Saudi Arabia\": \"SA\",\n  Senegal: \"SN\",\n  Serbia: \"RS\",\n  Seychelles: \"SC\",\n  \"Sierra Leone\": \"SL\",\n  Singapore: \"SG\",\n  \"Sint Maarten (Dutch part)\": \"SX\",\n  Slovakia: \"SK\",\n  Slovenia: \"SI\",\n  \"Solomon Islands\": \"SB\",\n  Somalia: \"SO\",\n  \"South Africa\": \"ZA\",\n  \"South Georgia and the South Sandwich Islands\": \"GS\",\n  \"South Sudan\": \"SS\",\n  Spain: \"ES\",\n  \"Sri Lanka\": \"LK\",\n  Sudan: \"SD\",\n  Suriname: \"SR\",\n  \"Svalbard and Jan Mayen\": \"SJ\",\n  Swaziland: \"SZ\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  \"Syrian Arab Republic\": \"SY\",\n  Taiwan: \"TW\",\n  Tajikistan: \"TJ\",\n  \"United Republic of Tanzania\": \"TZ\",\n  Thailand: \"TH\",\n  \"Timor-Leste\": \"TL\",\n  Togo: \"TG\",\n  Tokelau: \"TK\",\n  Tonga: \"TO\",\n  \"Trinidad and Tobago\": \"TT\",\n  Tunisia: \"TN\",\n  Turkey: \"TR\",\n  Turkmenistan: \"TM\",\n  \"Turks and Caicos Islands\": \"TC\",\n  Tuvalu: \"TV\",\n  Uganda: \"UG\",\n  Ukraine: \"UA\",\n  \"United Arab Emirates\": \"AE\",\n  \"United Kingdom\": \"GB\",\n  \"United States\": \"US\",\n  \"United States Minor Outlying Islands\": \"UM\",\n  Uruguay: \"UY\",\n  Uzbekistan: \"UZ\",\n  Vanuatu: \"VU\",\n  Venezuela: \"VE\",\n  \"Viet Nam\": \"VN\",\n  \"British Virgin Islands\": \"VG\",\n  \"US Virgin Islands\": \"VI\",\n  \"Wallis and Futuna\": \"WF\",\n  \"Western Sahara\": \"EH\",\n  Yemen: \"YE\",\n  Zambia: \"ZM\",\n  Zimbabwe: \"ZW\"\n};\n\nexport default s;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAyiPwsV5KhuJBve4i9Ci4qcXyB9fc5XQs\",\n  authDomain: \"esc-voter.firebaseapp.com\",\n  databaseURL: \"https://esc-voter-default-rtdb.firebaseio.com/\",\n  projectId: \"esc-voter\",\n  storageBucket: \"esc-voter.appspot.com\",\n  messagingSenderId: \"124189722667\",\n  appId: \"1:124189722667:web:86ccdcbd1414565558826e\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\n","import React, { Component, CSSProperties } from \"react\";\nimport {\n  DragDropContext,\n  Draggable,\n  DraggableProvided,\n  DraggingStyle,\n  Droppable,\n  DropResult,\n  NotDraggingStyle\n} from \"react-beautiful-dnd\";\nimport participatingCountries from \"./participatingCountries\";\nimport nameToCountryCode from \"./nameToCountryCode\";\nimport { db } from \"./Firebase\";\n\n// a little function to help us with reordering the result\nconst reorder = (list: any[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst pointsInOrder = [12, 10, 8, 7, 6, 5, 4, 3, 2, 1];\n\nconst grid = 8;\n\nconst getItemStyle = (\n  isDragging: boolean,\n  draggableStyle: DraggingStyle | NotDraggingStyle | null | undefined\n): CSSProperties => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid,\n  // margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"lightblue\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250,\n  margin: \"0 auto\"\n});\n\ntype Item = { id: string; countryName: string };\ntype State = { items: Item[]; userName: string; postSucceeded: boolean };\n\nconst getCountries = (): Item[] =>\n  participatingCountries.map((countryName, index) => ({ id: `item-${index}`, countryName }));\n\nclass DndVoting extends Component<any, State> {\n  constructor(props: Object) {\n    super(props);\n    const countriesAsTheyWouldAppearWhenFresh = getCountries();\n    const defaultState = {\n      items: countriesAsTheyWouldAppearWhenFresh,\n      userName: \"\",\n      postSucceeded: false\n    };\n    const localStorageContent = localStorage.getItem(\"lastState\");\n    const savedState = localStorageContent\n      ? JSON.parse(localStorageContent)\n      : defaultState;\n\n    const areSameLength = defaultState.items.length === savedState.items.length;\n    const containSameCountries =\n      intersection(\n        new Set(defaultState.items.map(({ countryName }) => countryName)),\n        new Set(\n          savedState.items.map(\n            ({ countryName }: { countryName: string }) => countryName\n          )\n        )\n      ).size === defaultState.items.length;\n    const savedCountriesAreEqualToParticipatingCountries =\n      areSameLength && containSameCountries;\n\n    console.log(\"areSameLength\", areSameLength);\n    console.log(\"containSameCountries\", containSameCountries);\n\n    if (savedCountriesAreEqualToParticipatingCountries) {\n      this.state = savedState;\n    } else {\n      this.state = defaultState;\n    }\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result: DropResult) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      items\n    });\n\n    let key = \"lastState\";\n    localStorage.setItem(key, JSON.stringify({ ...this.state, items }));\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const { userName, items } = this.state;\n    return (\n      <div>\n        <h1 style={{ margin: \"1rem\" }}>ESC hos Velles 2023</h1>\n        <div style={{ textAlign: \"left\", margin: \"1rem\" }}>\n          <p>\n            Dra og slipp landene i rekkefølge. Du trenger ikke sortere de som\n            ikke får poeng.\n          </p>\n          <p>Sveip til bunnen for å skrive inn kallenavn og sende inn poeng.</p>\n        </div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {items.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided: DraggableProvided, snapshot) => {\n                      return (\n                        <div\n                          style={{\n                            marginBottom: `${grid * 2}px`\n                          }}\n                        >\n                          <div\n                            className=\"nes-container is-rounded\"\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <div>\n                              <img\n                                src={`flags/${nameToCountryCode[\n                                  item.countryName\n                                ].toLowerCase()}.png`}\n                                className=\"flag\"\n                                alt={`Flag of ${item.countryName}`}\n                              />\n                              {item.countryName}\n                            </div>\n                            {pointsInOrder[index] && (\n                              <div\n                                className=\"nes-container is-rounded\"\n                                style={{\n                                  padding: \"0.1rem\",\n                                  background: \"#fff\"\n                                }}\n                              >\n                                {pointsInOrder[index]}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      );\n                    }}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <div style={{ margin: \"1rem\" }}>\n          {this.state.postSucceeded ? (\n            <div>Takk for dine svar!</div>\n          ) : (\n            <React.Fragment>\n              <div className=\"nes-field\" style={{ margin: \"1rem\" }}>\n                <label>Navnet ditt</label>\n                <input\n                  value={this.state.userName}\n                  onChange={e => this.setState({ userName: e.target.value })}\n                  className=\"nes-input\"\n                  type=\"text\"\n                />\n              </div>\n              <button\n                className={`nes-btn is-primary ${!userName && \"is-disabled\"}`}\n                style={{ marginBottom: \"8rem\" }}\n                onClick={async () => {\n                  const votes: {\n                    [point: number]: string;\n                  } = pointsInOrder.reduce(\n                    (accumulator, point, index) => ({\n                      ...accumulator,\n                      [point]: items[index].countryName\n                    }),\n                    {}\n                  );\n                  db.collection(\"user-votes\")\n                    .add({\n                      userName,\n                      votes\n                    })\n                    .then(docRef => {\n                      console.log(\"Document written with ID: \", docRef.id);\n                      this.setState({ postSucceeded: true });\n                    })\n                    .catch(error => {\n                      console.error(\"Error adding document: \", error);\n                    });\n                }}\n              >\n                Send inn poeng\n              </button>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction intersection<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  let _intersection = new Set<T>();\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      _intersection.add(elem);\n    }\n  }\n  return _intersection;\n}\n\nexport default DndVoting;\n","import React, { useState, useEffect } from \"react\";\nimport { db } from \"./Firebase\";\nimport participatingCountries from \"./participatingCountries\";\nimport nameToCountryCode from \"./nameToCountryCode\";\n\ntype OneUsersVotes = { userName: string; votes: { [point: number]: string } };\ntype AllVotes = Array<OneUsersVotes>;\ntype VotingState = {\n  voteTally: FinalScore;\n  usersVotes: { [country: string]: number };\n  votingUserName: string;\n  myVoteStep: number;\n};\ntype FinalScore = { [country: string]: number };\n\nconst ScoreBoard = () => {\n  const [allVotes, setAllVotes] = useState<AllVotes>([]);\n  const [voteSteps, setVoteSteps] = useState<number>(0);\n\n  useEffect(() => {\n    db.collection(\"user-votes\")\n      .get()\n      .then(querySnapshot => {\n        const scoresAndUsers: AllVotes = [];\n        querySnapshot.forEach(d =>\n          scoresAndUsers.push({\n            userName: d.data().userName,\n            votes: d.data().votes\n          })\n        );\n        setAllVotes(scoresAndUsers);\n      });\n  }, []);\n\n  const votingState: VotingState = allVotes.reduce(\n    (soFar: VotingState, ouv: OneUsersVotes) => {\n      try {\n        return Object.entries<string>(ouv.votes)\n          .map<[string, number]>(([points, country]) => [\n            country,\n            parseInt(points)\n          ])\n          .sort(([, points1], [, points2]) => points1 - points2)\n          .reduce<VotingState>(\n            (tempAccum: VotingState, [country, points]) =>\n              tempAccum.myVoteStep >= voteSteps\n                ? tempAccum\n                : {\n                    ...tempAccum,\n                    voteTally: {\n                      ...tempAccum.voteTally,\n                      [country]: (tempAccum.voteTally[country] || 0) + points\n                    },\n                    usersVotes:\n                      ouv.userName === tempAccum.votingUserName\n                        ? { ...tempAccum.usersVotes, [country]: points }\n                        : { [country]: points },\n                    myVoteStep: tempAccum.myVoteStep + 1,\n                    votingUserName: ouv.userName\n                  },\n\n            soFar\n          );\n      } catch (e) {\n        return soFar;\n      }\n    },\n    {\n      voteTally: participatingCountries.reduce((soFar, a) => ({ ...soFar, [a]: 0 }), {}),\n      usersVotes: {},\n      votingUserName: \"\",\n      myVoteStep: 0\n    }\n  );\n  console.log(votingState);\n\n  console.log(allVotes);\n  return (\n    <div>\n      <h1>Resultater</h1>\n      <div>\n        <button\n          className={`nes-btn is-secondary`}\n          onClick={() => setVoteSteps(voteSteps - 1)}\n        >\n          Tilbake\n        </button>\n        <button\n          className={`nes-btn is-primary`}\n          onClick={() => setVoteSteps(voteSteps + 1)}\n        >\n          Neste\n        </button>\n      </div>\n      <div>Stemmene fra {votingState.votingUserName}</div>\n      <div>\n        <div style={{ width: \"400px\", margin: \"0 auto\" }}>\n          <table\n            className=\"nes-table is-bordered is-centered\"\n            style={{ background: \"lightblue\" }}\n          >\n            <tbody>\n              {Object.entries<number>(votingState.voteTally)\n                .sort(([, points1], [, points2]) => points2 - points1)\n                .map(([country, score]: [string, number]) => {\n                  const isLatestVote =\n                    votingState.usersVotes[country] ===\n                    Math.max(...Object.values(votingState.usersVotes));\n                  const flag = `flags/${nameToCountryCode[\n                    country\n                  ].toLowerCase()}.png`;\n                  return (\n                    <tr\n                      style={\n                        isLatestVote\n                          ? {\n                              backgroundColor: \"rgb(32, 156, 238)\"\n                            }\n                          : {}\n                      }\n                      key={`${country} ${score}`}\n                    >\n                      <td>\n                        <img\n                          src={flag}\n                          className=\"flag\"\n                          alt={`Flag of ${country}`}\n                        />\n                        {country}\n                      </td>\n                      <td style={{width: \"4rem\"}}>{votingState.usersVotes[country] || \"\"}</td>\n                      <td style={{width: \"4rem\"}}>{score}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import React from \"react\";\nimport \"./App.css\";\nimport DndVoting from \"./DndVoting\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" exact component={DndVoting} />\n        <Route path=\"/score\" component={ScoreBoard} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}